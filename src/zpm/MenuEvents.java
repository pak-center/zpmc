/*
 *  This file is part of z/VM Performance Monitor.
 *
 *  z/VM Performance Monitor is free software: you can redistribute
 *  it and/or modify it under the terms of the GNU General Public License
 *  as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  z/VM Performance Monitor is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with z/VM Performance Monitor Daemon.
 *  If not, see <http://www.gnu.org/licenses/>.
*/

/*
 * MenuEvents.java
 *
 */

package zpm;

import java.awt.event.ItemEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;



/**
 *
 * @author Przemyslaw Kupisz
 */
public class MenuEvents extends javax.swing.JDialog {

    public MenuEvents(java.awt.Frame parent) {
        super(parent);
        initComponents();
    }

    @Action public void closeMenuEvents() {
        dispose();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        System = new javax.swing.JCheckBox();
        Monitor = new javax.swing.JCheckBox();
        Sheduler = new javax.swing.JCheckBox();
        Storage = new javax.swing.JCheckBox();
        Users = new javax.swing.JCheckBox();
        Processor = new javax.swing.JCheckBox();
        IO = new javax.swing.JCheckBox();
        Seek = new javax.swing.JCheckBox();
        VNetwork = new javax.swing.JCheckBox();
        Appldata = new javax.swing.JCheckBox();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zpm.ZpmApp.class).getContext().getResourceMap(MenuEvents.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        System.setText(resourceMap.getString("System.text")); // NOI18N
        System.setName("System"); // NOI18N
        System.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SystemItemStateChanged(evt);
            }
        });

        Monitor.setText(resourceMap.getString("Monitor.text")); // NOI18N
        Monitor.setName("Monitor"); // NOI18N
        Monitor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MonitorItemStateChanged(evt);
            }
        });

        Sheduler.setText(resourceMap.getString("Sheduler.text")); // NOI18N
        Sheduler.setName("Sheduler"); // NOI18N
        Sheduler.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ShedulerItemStateChanged(evt);
            }
        });

        Storage.setText(resourceMap.getString("Storage.text")); // NOI18N
        Storage.setName("Storage"); // NOI18N
        Storage.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                StorageItemStateChanged(evt);
            }
        });

        Users.setText(resourceMap.getString("Users.text")); // NOI18N
        Users.setName("Users"); // NOI18N
        Users.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                UsersItemStateChanged(evt);
            }
        });

        Processor.setText(resourceMap.getString("Processor.text")); // NOI18N
        Processor.setName("Processor"); // NOI18N
        Processor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ProcessorItemStateChanged(evt);
            }
        });

        IO.setText(resourceMap.getString("IO.text")); // NOI18N
        IO.setName("IO"); // NOI18N
        IO.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                IOItemStateChanged(evt);
            }
        });

        Seek.setText(resourceMap.getString("Seek.text")); // NOI18N
        Seek.setName("Seek"); // NOI18N
        Seek.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SeekItemStateChanged(evt);
            }
        });

        VNetwork.setText(resourceMap.getString("VNetwork.text")); // NOI18N
        VNetwork.setName("VNetwork"); // NOI18N
        VNetwork.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                VNetworkItemStateChanged(evt);
            }
        });

        Appldata.setText(resourceMap.getString("Appldata.text")); // NOI18N
        Appldata.setName("Appldata"); // NOI18N
        Appldata.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AppldataItemStateChanged(evt);
            }
        });

        jToggleButton1.setText(resourceMap.getString("jToggleButton1.text")); // NOI18N
        jToggleButton1.setName("jToggleButton1"); // NOI18N
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(227, 227, 227))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(System, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Monitor)
                            .addComponent(Sheduler)
                            .addComponent(Storage)
                            .addComponent(Users))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VNetwork)
                            .addComponent(Seek)
                            .addComponent(IO)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Appldata)
                                    .addComponent(Processor))
                                .addGap(133, 133, 133)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(20, 20, 20)
                                        .addComponent(jButton1)))))
                        .addContainerGap(72, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(379, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(System)
                            .addComponent(Processor)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Monitor)
                            .addComponent(IO))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Sheduler)
                            .addComponent(Seek))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Storage)
                            .addComponent(VNetwork))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Users)
                            .addComponent(Appldata))
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton1)
                            .addComponent(jButton1))
                        .addGap(29, 29, 29))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        closeMenuEvents();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        switch(ZpmApp.toggleButtonSet) {
            case 0:
                jToggleButton1.setText("Click to disable");

                //couse' interval (in sec) must be > 0 so
                if (Integer.parseInt(jTextField1.getText()) > 0) {
                    ZpmApp.interval = Integer.parseInt(jTextField1.getText());
                } else {
                    ZpmApp.interval = 1;
                }
                
                ZpmView.jLabel7.setText(Integer.toString(ZpmApp.interval));
                /**
                 * Create new thread for jPanel "Current Events"
                 */
                new CurrentEvents();
                ZpmApp.toggleButtonSet = 1;
                break;
            case 1:
                CurrentEvents.stop();
                ZpmApp.toggleButtonSet = 0;
                  try {
                       Thread.sleep(1000); //w8 1 second to let CurrentEvents thread stopped
                      } catch (InterruptedException ex) {
                               Logger.getLogger(MenuEvents.class.getName()).log(Level.SEVERE, null, ex);
                        }
                jToggleButton1.setText("Click to enable");
                 break;
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void SystemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SystemItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox1 = true;
    }//GEN-LAST:event_SystemItemStateChanged

    private void MonitorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MonitorItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox2 = true;
    }//GEN-LAST:event_MonitorItemStateChanged

    private void ShedulerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ShedulerItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox3 = true;
    }//GEN-LAST:event_ShedulerItemStateChanged

    private void StorageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_StorageItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox4 = true;
    }//GEN-LAST:event_StorageItemStateChanged

    private void UsersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_UsersItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox5 = true;
    }//GEN-LAST:event_UsersItemStateChanged

    private void ProcessorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ProcessorItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox6 = true;
    }//GEN-LAST:event_ProcessorItemStateChanged

    private void IOItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_IOItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox7 = true;
    }//GEN-LAST:event_IOItemStateChanged

    private void SeekItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SeekItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox8 = true;
    }//GEN-LAST:event_SeekItemStateChanged

    private void VNetworkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_VNetworkItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox9 = true;
    }//GEN-LAST:event_VNetworkItemStateChanged

    private void AppldataItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AppldataItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) ZpmApp.checkbox10 = true;
    }//GEN-LAST:event_AppldataItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Appldata;
    private javax.swing.JCheckBox IO;
    private javax.swing.JCheckBox Monitor;
    private javax.swing.JCheckBox Processor;
    private javax.swing.JCheckBox Seek;
    private javax.swing.JCheckBox Sheduler;
    private javax.swing.JCheckBox Storage;
    private javax.swing.JCheckBox System;
    private javax.swing.JCheckBox Users;
    private javax.swing.JCheckBox VNetwork;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

}
